//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Feng Wu/InputAction/FW_VRControllerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @FW_VRControllerInputAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @FW_VRControllerInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""FW_VRControllerInputAction"",
    ""maps"": [
        {
            ""name"": ""VR Controller"",
            ""id"": ""f8f5c0b1-fcce-4197-b13f-c34dcf0f37de"",
            ""actions"": [
                {
                    ""name"": ""LeftController_X"",
                    ""type"": ""Button"",
                    ""id"": ""fa4c145b-311c-4bf8-b17a-320387ecfe9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftController_Y"",
                    ""type"": ""Button"",
                    ""id"": ""e19c0155-534b-45c7-9057-7a34d25f63d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightController_A"",
                    ""type"": ""Button"",
                    ""id"": ""91727127-714d-4991-a0a4-a4cd1387260d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightController_B"",
                    ""type"": ""Button"",
                    ""id"": ""f55e5c9c-5eb4-4de7-904c-dae7495de094"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""31a081a5-c35c-4310-b2a0-03dc6d56b707"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftController_X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f605e8c7-8e76-4ed5-8926-e0b4573ea3a1"",
                    ""path"": ""<OculusTouchController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftController_X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1212cdd7-6b00-4613-ba8f-7879a221e9b6"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftController_X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f845cdcb-4607-4015-9120-426cc04ff467"",
                    ""path"": ""<ViveController>{LeftHand}/menu"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftController_X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93f02471-e6fa-4965-83d5-8a57d2090f07"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftController_Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a2d71f0-7113-46bf-9a73-7fd8580dcb54"",
                    ""path"": ""<OculusTouchController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftController_Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e927453-aca1-463a-8b42-b90489b2768e"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightController_A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d146fbe-407b-4bb8-aa31-497146da8427"",
                    ""path"": ""<OculusTouchController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightController_A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d574c578-a9d8-4dff-8ff0-df287290d990"",
                    ""path"": ""<ViveController>{RightHand}/menu"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightController_A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32f7c3ba-9798-4d30-af74-1dc825e230bc"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightController_B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""427fd4c4-e64f-4b7b-940d-f41feb98324b"",
                    ""path"": ""<OculusTouchController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightController_B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // VR Controller
        m_VRController = asset.FindActionMap("VR Controller", throwIfNotFound: true);
        m_VRController_LeftController_X = m_VRController.FindAction("LeftController_X", throwIfNotFound: true);
        m_VRController_LeftController_Y = m_VRController.FindAction("LeftController_Y", throwIfNotFound: true);
        m_VRController_RightController_A = m_VRController.FindAction("RightController_A", throwIfNotFound: true);
        m_VRController_RightController_B = m_VRController.FindAction("RightController_B", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // VR Controller
    private readonly InputActionMap m_VRController;
    private IVRControllerActions m_VRControllerActionsCallbackInterface;
    private readonly InputAction m_VRController_LeftController_X;
    private readonly InputAction m_VRController_LeftController_Y;
    private readonly InputAction m_VRController_RightController_A;
    private readonly InputAction m_VRController_RightController_B;
    public struct VRControllerActions
    {
        private @FW_VRControllerInputAction m_Wrapper;
        public VRControllerActions(@FW_VRControllerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftController_X => m_Wrapper.m_VRController_LeftController_X;
        public InputAction @LeftController_Y => m_Wrapper.m_VRController_LeftController_Y;
        public InputAction @RightController_A => m_Wrapper.m_VRController_RightController_A;
        public InputAction @RightController_B => m_Wrapper.m_VRController_RightController_B;
        public InputActionMap Get() { return m_Wrapper.m_VRController; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VRControllerActions set) { return set.Get(); }
        public void SetCallbacks(IVRControllerActions instance)
        {
            if (m_Wrapper.m_VRControllerActionsCallbackInterface != null)
            {
                @LeftController_X.started -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnLeftController_X;
                @LeftController_X.performed -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnLeftController_X;
                @LeftController_X.canceled -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnLeftController_X;
                @LeftController_Y.started -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnLeftController_Y;
                @LeftController_Y.performed -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnLeftController_Y;
                @LeftController_Y.canceled -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnLeftController_Y;
                @RightController_A.started -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnRightController_A;
                @RightController_A.performed -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnRightController_A;
                @RightController_A.canceled -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnRightController_A;
                @RightController_B.started -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnRightController_B;
                @RightController_B.performed -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnRightController_B;
                @RightController_B.canceled -= m_Wrapper.m_VRControllerActionsCallbackInterface.OnRightController_B;
            }
            m_Wrapper.m_VRControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftController_X.started += instance.OnLeftController_X;
                @LeftController_X.performed += instance.OnLeftController_X;
                @LeftController_X.canceled += instance.OnLeftController_X;
                @LeftController_Y.started += instance.OnLeftController_Y;
                @LeftController_Y.performed += instance.OnLeftController_Y;
                @LeftController_Y.canceled += instance.OnLeftController_Y;
                @RightController_A.started += instance.OnRightController_A;
                @RightController_A.performed += instance.OnRightController_A;
                @RightController_A.canceled += instance.OnRightController_A;
                @RightController_B.started += instance.OnRightController_B;
                @RightController_B.performed += instance.OnRightController_B;
                @RightController_B.canceled += instance.OnRightController_B;
            }
        }
    }
    public VRControllerActions @VRController => new VRControllerActions(this);
    public interface IVRControllerActions
    {
        void OnLeftController_X(InputAction.CallbackContext context);
        void OnLeftController_Y(InputAction.CallbackContext context);
        void OnRightController_A(InputAction.CallbackContext context);
        void OnRightController_B(InputAction.CallbackContext context);
    }
}
